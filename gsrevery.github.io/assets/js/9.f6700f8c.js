(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{354:function(a,t,s){"use strict";s.r(t);var _=s(43),v=Object(_.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"前端代码规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前端代码规范"}},[a._v("#")]),a._v(" 前端代码规范")]),a._v(" "),s("h2",{attrs:{id:"特别注意"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#特别注意"}},[a._v("#")]),a._v(" 特别注意")]),a._v(" "),s("ul",[s("li",[a._v("1.创建对象时，尽量不要创建布尔对象。它会拖慢执行速度。")])]),a._v(" "),s("h2",{attrs:{id:"一-html"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一-html"}},[a._v("#")]),a._v(" 一.HTML")]),a._v(" "),s("h3",{attrs:{id:"_1-语义化标签"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-语义化标签"}},[a._v("#")]),a._v(" 1.语义化标签")]),a._v(" "),s("ul",[s("li",[a._v("HTML5 提供了很多语义化元素，更好地帮助描述内容。希望你能从这些丰富的标签库中受益。请确保正确使用语义化的标签，错误的用法甚至不如保守的用法。")])]),a._v(" "),s("h3",{attrs:{id:"_2-简洁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-简洁"}},[a._v("#")]),a._v(" 2.简洁")]),a._v(" "),s("ul",[s("li",[a._v("确保代码的简洁，不要再采用XHTML的旧做法。")])]),a._v(" "),s("h3",{attrs:{id:"_3-属性顺序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-属性顺序"}},[a._v("#")]),a._v(" 3.属性顺序")]),a._v(" "),s("blockquote",[s("p",[a._v("Html属性应该按照特定的顺序出现以保证易读性。")])]),a._v(" "),s("ul",[s("li",[a._v("class")]),a._v(" "),s("li",[a._v("id")]),a._v(" "),s("li",[a._v("name")]),a._v(" "),s("li",[a._v("data-*")]),a._v(" "),s("li",[a._v("src, for, type, href, value , max-length, max, min, pattern")]),a._v(" "),s("li",[a._v("placeholder, title, alt")]),a._v(" "),s("li",[a._v("aria-*, role")]),a._v(" "),s("li",[a._v("required, readonly, disabled")])]),a._v(" "),s("h3",{attrs:{id:"_4-字符编码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-字符编码"}},[a._v("#")]),a._v(" 4.字符编码")]),a._v(" "),s("ul",[s("li",[a._v("通过明确声明字符编码，能够确保浏览器快速并容易的判断页面内容的渲染方式。这样做的好处是，可以避免在 HTML 中使用字符实体标记（character entity），从而全部与文档编码一致（一般采用 UTF-8 编码）。")])]),a._v(" "),s("h3",{attrs:{id:"_5-可用性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-可用性"}},[a._v("#")]),a._v(" 5.可用性")]),a._v(" "),s("ul",[s("li",[a._v("可用性不应该是事后才考虑的事情。你可以通过简单的修改做出不错的效果。")])]),a._v(" "),s("blockquote",[s("ol",[s("li",[a._v("正确使用alt属性")]),a._v(" "),s("li",[a._v("确保链接和按钮正确使用（避免"),s("div",{staticClass:"button"},[a._v("）这种粗暴的写法")])]),a._v(" "),s("li",[a._v("不依赖于颜色来传达信息")]),a._v(" "),s("li",[a._v("给表单做好lable标记")])])]),a._v(" "),s("h2",{attrs:{id:"二-css-scss"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二-css-scss"}},[a._v("#")]),a._v(" 二.CSS ,SCSS")]),a._v(" "),s("h3",{attrs:{id:"_1-分号"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-分号"}},[a._v("#")]),a._v(" 1.分号")]),a._v(" "),s("ul",[s("li",[a._v("不能漏写分号。\ndiv {\ncolor:red;\n}")])]),a._v(" "),s("h3",{attrs:{id:"_2-选择器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-选择器"}},[a._v("#")]),a._v(" 2.选择器")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("紧密耦合DOM选择器，三个层级以上建议加class：\n/* bad */\ndiv:first-of-type :last-child")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("  /* good */\n  div:first-of-type .info\n")])])])]),a._v(" "),s("li",[s("p",[a._v("避免不必要的写法：\n/* bad */\nimg[src$=svg], ul > li:first-child{\nopacity: 0;\n}")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("  /* good */\n  [src$=svg] , ul > :first-child{\n      opacity: 0;\n  }\n")])])])])]),a._v(" "),s("h3",{attrs:{id:"_3-指明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-指明"}},[a._v("#")]),a._v(" 3.指明")]),a._v(" "),s("ul",[s("li",[a._v("不要让代码难于重写，让选择器更精确，减少ID、避免使用!important")])]),a._v(" "),s("h3",{attrs:{id:"_4-覆盖"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-覆盖"}},[a._v("#")]),a._v(" 4.覆盖")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("覆盖样式会使维护和调试更困难，所以要尽量避免。\n/* bad */\nli {\nvisibility: hidden;\n}\nli:first-child {\nvisibility: visible;\n}")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("  /* good */\n  li + li {\n      Visibility: hidden;\n  }\n")])])])])]),a._v(" "),s("h3",{attrs:{id:"_5-继承"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-继承"}},[a._v("#")]),a._v(" 5.继承")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("不要把可继承的样式重复声明:\n/* bad */\ndiv h1, div p {\ntext-shadow: 0 1px 0 #fff;\n}")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("  /* good */\n  div {\n      text-shadow: 0 1px 0 #fff;\n  }\n")])])])])]),a._v(" "),s("h3",{attrs:{id:"_6-代码的简洁性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-代码的简洁性"}},[a._v("#")]),a._v(" 6.代码的简洁性")]),a._v(" "),s("ul",[s("li",[a._v("保持代码的简洁。使用属性缩写。不必要的值不用写。\n/* bad "),s("em",[a._v("/\ndiv {\ntransition: all 1s;\ntop: 50%;\nmargin-top: -10px;\npadding-top: 5px;\npadding-right: 10px;\npadding-bottom: 20px;\npadding-left: 10px;\n}\n/")]),a._v(" good */\ndiv {\ntransition: 1s;\ntop: calc(50% - 10px);\npadding: 5px 10px 20px;\n}")])]),a._v(" "),s("h3",{attrs:{id:"_7-动画"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-动画"}},[a._v("#")]),a._v(" 7.动画")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("除了变形和改变透明度用animation，其他尽量使用transition。\n/* bad */\ndiv:hover {\nanimation: move 1s forwards;\n}\n@keyframes move {\n100% {\nmargin-left: 100px;\n}\n}")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("  /* good */\n  div:hover {\n      transition: 1s;\n      transform: translateX(100px);\n  }\n")])])])])]),a._v(" "),s("h3",{attrs:{id:"_8-单位"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-单位"}},[a._v("#")]),a._v(" 8.单位")]),a._v(" "),s("ul",[s("li",[a._v("可以不用单位就不用单位。建议用rem。时间单位用s比ms好。")])]),a._v(" "),s("h3",{attrs:{id:"_9-颜色"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-颜色"}},[a._v("#")]),a._v(" 9.颜色")]),a._v(" "),s("ul",[s("li",[a._v("需要做透明效果是用rgba,否则都用16进制表示。")])]),a._v(" "),s("h3",{attrs:{id:"_10-id及class命名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-id及class命名"}},[a._v("#")]),a._v(" 10.id及class命名")]),a._v(" "),s("ul",[s("li",[a._v("class应以功能过内容命名，不以表现形式命名，通用且有意义的词")]),a._v(" "),s("li",[a._v("class与id单词字母小写，多个单词组成时，使用中划线“-”分隔")])]),a._v(" "),s("h3",{attrs:{id:"_11-样式的声明顺序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-样式的声明顺序"}},[a._v("#")]),a._v(" 11.样式的声明顺序")]),a._v(" "),s("blockquote",[s("ol",[s("li",[a._v("定位")]),a._v(" "),s("li",[a._v("盒模型")]),a._v(" "),s("li",[a._v("关于文字")]),a._v(" "),s("li",[a._v("关于颜色背景")]),a._v(" "),s("li",[a._v("其他：如：cursor:pointer")])])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v('    .declaration-order {\n        /*定位 */\n        position: absolute;\n        top: 0;\n        left: 0;\n        z-index: 100;\n        /* 盒模型 */\n        padding: 10px;\n        border-radius: 3px;\n        float: right;\n        overflow: hidden;\n        /* 关于文字 */\n        font: normal 13px "Helvetica Neue", sans-serif;\n        line-height: 1.5;\n        text-align: center;\n        /* 关于颜色，背景 */\n        background-color: #f5f5f5;\n        color: #fff;\n        opacity: .8;\n        /*其他 */\n        cursor: pointer;\n    }\n')])])]),s("h2",{attrs:{id:"三-es6语法规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三-es6语法规范"}},[a._v("#")]),a._v(" 三.ES6语法规范")]),a._v(" "),s("h3",{attrs:{id:"_1-let取代var"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-let取代var"}},[a._v("#")]),a._v(" 1.let取代var")]),a._v(" "),s("ul",[s("li",[a._v("ES6提出了两个新的声明变量的命令：let和const。其中。Let完全可以取代var，因为两者语义相同，而且let没有副作用。")])]),a._v(" "),s("h3",{attrs:{id:"_2-全局常量const"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-全局常量const"}},[a._v("#")]),a._v(" 2.全局常量const")]),a._v(" "),s("ul",[s("li",[a._v("在全局环境，不应该设置变量，只应设置常量。好处：")]),a._v(" "),s("li",[a._v("const优于let有几个原因:")])]),a._v(" "),s("blockquote",[s("ol",[s("li",[a._v("const可以提醒阅读程序的人，这个变量不应该改变；")]),a._v(" "),s("li",[a._v("const比较符合函数式编程思想，运算不改变值，只是新建值，而且这样也有利于将来的分布式运算；")]),a._v(" "),s("li",[a._v("javascript编译器会对const进行优化，所以多使用const，有利于提高程序运行效率，也就是说let和const的本质区别，其实是编译器内部的处理不同。")]),a._v(" "),s("li",[a._v("Const声明常量还有两个好处，一是阅读代码的人会立刻意识到不应该修改这个值，而是为了防止无意间修改变量值所导致的错误。")])])]),a._v(" "),s("h3",{attrs:{id:"_3-新增（i-）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-新增（i-）"}},[a._v("#")]),a._v(" 3.新增（i++）")]),a._v(" "),s("ul",[s("li",[a._v("尽量不要使用i++,尽量使用i+1;(除了for循环)")])]),a._v(" "),s("h2",{attrs:{id:"四．vue规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四．vue规范"}},[a._v("#")]),a._v(" 四．vue规范")]),a._v(" "),s("h3",{attrs:{id:"_1-vue方法放置顺序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-vue方法放置顺序"}},[a._v("#")]),a._v(" 1.vue方法放置顺序")]),a._v(" "),s("ol",[s("li",[a._v("components")]),a._v(" "),s("li",[a._v("props")]),a._v(" "),s("li",[a._v("data")]),a._v(" "),s("li",[a._v("created")]),a._v(" "),s("li",[a._v("mounted")]),a._v(" "),s("li",[a._v("activited")]),a._v(" "),s("li",[a._v("update")]),a._v(" "),s("li",[a._v("beforeRouteUpdate")]),a._v(" "),s("li",[a._v("metods")]),a._v(" "),s("li",[a._v("filter")]),a._v(" "),s("li",[a._v("computed")]),a._v(" "),s("li",[a._v("watch")])]),a._v(" "),s("h3",{attrs:{id:"_2-method自定义方法命名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-method自定义方法命名"}},[a._v("#")]),a._v(" 2.method自定义方法命名")]),a._v(" "),s("ol",[s("li",[s("p",[a._v("动宾短语\n/* good */\njumpPage、openCarlnfoDialog")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v(" /* bad */\n go、nextPage、show、open、login\n")])])])]),a._v(" "),s("li",[s("p",[a._v("ajax方法以get、post开头，以data结尾\n/* good */\ngetListData、postFromData")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v(" /* bad */\n takeData、confirmData、gitList、postFrom\n")])])])]),a._v(" "),s("li",[s("p",[a._v("事件方法以on开头\nonTypeChange、onUsernameInput")])]),a._v(" "),s("li",[s("p",[a._v("init、refresh单词除外")])]),a._v(" "),s("li",[s("p",[a._v("尽量使用常用单词开头\nonTypeChange、onUsernameInput")])]),a._v(" "),s("li",[s("p",[a._v("驼峰命名\n/* good */\ngetListData")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v(" /* bad */\n get_list_data、getlistData\n")])])])])]),a._v(" "),s("h3",{attrs:{id:"_3-生命周期方法注意点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-生命周期方法注意点"}},[a._v("#")]),a._v(" 3.生命周期方法注意点")]),a._v(" "),s("ol",[s("li",[a._v("不在mounted、created之类的方法里写逻辑、取ajax数据。")]),a._v(" "),s("li",[a._v("在created里面监听Bus事件")])]),a._v(" "),s("h3",{attrs:{id:"_4-基于模块开发"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-基于模块开发"}},[a._v("#")]),a._v(" 4.基于模块开发")]),a._v(" "),s("ul",[s("li",[a._v("原则：每一个VUE组件首先必须专注于解决一个单一问题，独立的、可复用的、微小的和可测试的。如果你的组件做了太多的事或是变得臃肿，请将其拆成更小的组件并保持单一原则。")])]),a._v(" "),s("h3",{attrs:{id:"_5-只在需要时创建组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-只在需要时创建组件"}},[a._v("#")]),a._v(" 5.只在需要时创建组件")]),a._v(" "),s("ul",[s("li",[a._v("Vue.js是一个基于组件的框架。如果你不知道何时创建组件可能会导致以下问题。")])]),a._v(" "),s("blockquote",[s("ol",[s("li",[a._v("如果组件太大, 可能很难重用和维护;")]),a._v(" "),s("li",[a._v("如果组件太小，你的项目就会（因为深层次的嵌套而）被淹没，也更难使组件间通信。")])])]),a._v(" "),s("h4",{attrs:{id:"规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#规则"}},[a._v("#")]),a._v(" "),s("strong",[a._v("规则")])]),a._v(" "),s("blockquote",[s("ol",[s("li",[a._v("尽可能早地尝试构建出诸如模态框、提示框、工具条、菜单、头部等这些明显的（通用型）组件。总之，你知道的这些组件以后一定会在当前页面或者是全局范围内需要。")]),a._v(" "),s("li",[a._v("在每一个新的开发项目中，对于一整个页面或者其中的一部分，在进行开发前先尝试思考一下。如果你认为它有一部分应该是一个组件，那么就创建它吧。")]),a._v(" "),s("li",[a._v("如果你不确定，那就不要。避免那些“以后可能会有用”的组件污染你的项目。它们可能会永远的只是（静静地）待在那里，这一点也不聪明。注意，一旦你意识到应该这么做，最好是就把它打破，以避免与项目的其他部分构成兼容性和复杂性。")])])])])}),[],!1,null,null,null);t.default=v.exports}}]);