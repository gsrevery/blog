(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{353:function(s,a,n){"use strict";n.r(a);var e=n(43),t=Object(e.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"javascript常用方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#javascript常用方法"}},[s._v("#")]),s._v(" javascript常用方法")]),s._v(" "),n("h2",{attrs:{id:"​判断复杂数据类型的方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#​判断复杂数据类型的方法"}},[s._v("#")]),s._v(" ​判断复杂数据类型的方法")]),s._v(" "),n("p",[s._v("​")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    eg: \n        var a = { 1, 2, 3 }\n        a.constructor == ture\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("h2",{attrs:{id:"​数据在本地存取的方式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#​数据在本地存取的方式"}},[s._v("#")]),s._v(" ​数据在本地存取的方式.")]),s._v(" "),n("p",[s._v("​")]),s._v(" "),n("ul",[n("li",[s._v("数据在本地sessionStorage中存取")])]),s._v(" "),n("ol",[n("li",[s._v("存：\nwindow.sessionStorage.setItem('goodsData', JSON.stringify(agencyInformationData))\ngoodsData 存在sessionStorage中的名字\nagencyInformationData 需要进行存储的数据\nJSON.stringify() 将数据转换成json格式")]),s._v(" "),n("li",[s._v("取：\nJSON.parse(window.sessionStorage.getItem('goodsData'))\ngoodsData 在sessionStorage中取出名字为goodsData 的数据\nJSON.parse() 将存储的 JSON 字符串转换为对象")])]),s._v(" "),n("ul",[n("li",[s._v("数据在本地localStorage中存取与sessionStorage一致")])]),s._v(" "),n("ol",[n("li",[s._v("存：\nwindow.localStorage.setItem('goodsData', JSON.stringify(agencyInformationData))")]),s._v(" "),n("li",[s._v("取：\nJSON.parse(window.localStorage.getItem('goodsData'))")])]),s._v(" "),n("p",[s._v("​")]),s._v(" "),n("h2",{attrs:{id:"for-in循环遍历对象得到key和value"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#for-in循环遍历对象得到key和value"}},[s._v("#")]),s._v(" for in循环遍历对象得到key和value")]),s._v(" "),n("ul",[n("li",[s._v("获取obj对象的key值")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    for ( let a in obj) {\n        sonsole.log(a)\n    }\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("ul",[n("li",[s._v("获取obj对象的value值")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    for ( let a in obj) {\n        console.log(obj[a])\n    }\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("​")]),s._v(" "),n("h2",{attrs:{id:"for-of循环遍历数组得到其中的数据项或者遍历字符串得到单个数据项"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#for-of循环遍历数组得到其中的数据项或者遍历字符串得到单个数据项"}},[s._v("#")]),s._v(" for of循环遍历数组得到其中的数据项或者遍历字符串得到单个数据项")]),s._v(" "),n("ul",[n("li",[s._v("获取数组中的数据")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    for (let data of arr) {\n        console.log(data)\n    }\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("ul",[n("li",[s._v("获取字符串中的数据")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    for (let data of string) {\n        console.log(data)\n    }\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("h2",{attrs:{id:"let-与-const的区别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#let-与-const的区别"}},[s._v("#")]),s._v(" let 与 const的区别")]),s._v(" "),n("ul",[n("li",[s._v("let声明的变量可以改变，值和类型都可以改变，没有限制。")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    let a = 10\n    a = 20\n    console.log(a) // 打印出来为20\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("ul",[n("li",[s._v("const声明的变量不得改变值，这意味着，const一旦声明变量，就必须立即初始化，不能留到以后赋值。")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    const b = 30\n    b = 40 // 这里就会提示报错\n    console.log(b) // 打印出来为 30\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("h2",{attrs:{id:"symbol的使用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#symbol的使用"}},[s._v("#")]),s._v(" Symbol的使用")]),s._v(" "),n("h3",{attrs:{id:"新的基础数据类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#新的基础数据类型"}},[s._v("#")]),s._v(" 新的基础数据类型")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    let s1 = Symbol()\n    let s2 = Symbol('gaopan')\n    typeof s1 typeof s2 输出都为\"symbol\"\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("h3",{attrs:{id:"使用symbol来作为对象属性名-key"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用symbol来作为对象属性名-key"}},[s._v("#")]),s._v(" 使用Symbol来作为对象属性名(key)")]),s._v(" "),n("ul",[n("li",[s._v("let obj1 = { name: '高攀', age: '24', [Symbol()]: 'Symbol作为属性名'}")]),s._v(" "),n("li",[s._v("Symbol类型的key是不能通过Object.keys()或者for...in来枚举的，它未被包含在对象自身的属性名集合(property names)之中。所以，利用该特性，我们可以把一些不需要对外操作和访问的属性使用Symbol来定义。也正因为这样一个特性，当使用JSON.stringify()将对象转换成JSON字符串的时候，Symbol属性也会被排除在输出内容之外")])]),s._v(" "),n("h3",{attrs:{id:"使用symbol来替代常量"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用symbol来替代常量"}},[s._v("#")]),s._v(" 使用Symbol来替代常量")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    let num1 = Symbol()\n    let num2 = Symbol()\n    num1 == num2 输出false\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("ul",[n("li",[s._v("这样定义，直接就保证了三个常量的值是唯一的了！")])]),s._v(" "),n("h3",{attrs:{id:"使用symbol定义类的私有属性-方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用symbol定义类的私有属性-方法"}},[s._v("#")]),s._v(" 使用Symbol定义类的私有属性/方法")]),s._v(" "),n("h3",{attrs:{id:"注册和获取全局symbol"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#注册和获取全局symbol"}},[s._v("#")]),s._v(" 注册和获取全局Symbol")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    let gs1 = Symbol.for('global_symbol_1') //注册一个全局Symbol\n    let gs2 = Symbol.for('global_symbol_1') //获取全局Symbol\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("h2",{attrs:{id:"模板字符串"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#模板字符串"}},[s._v("#")]),s._v(" 模板字符串")]),s._v(" "),n("h3",{attrs:{id:"合并数组"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#合并数组"}},[s._v("#")]),s._v(" 合并数组")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    var arr1 = [1, 2, 3]\n    var arr2 = [4, 5, 6]\n    var arr3 = [...arr1, ...arr2]\n    arr3 = [1, 2, 3, 4, 5, 6]\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("h3",{attrs:{id:"字符串转数组"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#字符串转数组"}},[s._v("#")]),s._v(" 字符串转数组")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('    var str = "gaopan"\n    var arr = [...str]\n    arr = ["g", "a", "o", "p", "a", "n"]\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("h3",{attrs:{id:"合并对象"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#合并对象"}},[s._v("#")]),s._v(" 合并对象")]),s._v(" "),n("ul",[n("li",[s._v("对象的key一样，会出现数据项替换情况")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    var obj1 = {name: '小明', age:24}\n    var obj2 = {name: '小红', age:23}\n    var obj3 = {...obj1, ...obj2}\n    obj3 = {name: \"小红\", age: 23}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("ul",[n("li",[s._v("如果对象的key不一样，则可以正常合并")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    var obj4 = {test: 'key不同'}\n    var obj5 = {...obj1, obj4}\n    obj5 = {name: '小明', age:24, test: 'key不同'}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("h2",{attrs:{id:"深拷贝和浅拷贝"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#深拷贝和浅拷贝"}},[s._v("#")]),s._v(" 深拷贝和浅拷贝")]),s._v(" "),n("ul",[n("li",[s._v("对象拷贝主要是针对：原对象不变，改变新对象内的元素。")]),s._v(" "),n("li",[s._v("浅拷贝：适用于只能改变对象内的一层。")]),s._v(" "),n("li",[s._v("深拷贝：适用于可以改变对象内的很多层。比如对象中包含数组，数组中包含对象，对象中还有数组，这时候如果我们要改变最里层数组中的元素，就需要使用到深拷贝。")])]),s._v(" "),n("ol",[n("li",[s._v("object.assign //对象浅拷贝，obj1复制给obj2\nconst obj1 = {a: 1};\nconst obj2 = {};\nObject.assign( obj2, obj1)\n拷贝对象时，只能拷贝一层")]),s._v(" "),n("li",[s._v("对象深拷贝\nconst obj1 = {a: 1};\nconst obj2 = JSON.parse(JSON.stringify(obj1));")]),s._v(" "),n("li",[s._v("ES6扩展运算符（…）//对象浅拷贝，obj1复制给obj2\nconst obj1 = {a: 1};\nconst obj2 = {...obj1};")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    // const obj1 = {name: '高攀', age: '23', num: [{one: '1', oneOne: {one: '11', two: '22', oneoneone: {one: '111', two: '222'}}}, {two: '2'}, {three: '3'}, {four: '4'}], money: {美元: '$', 人民币: '￥'}}\n    // const obj2 = obj1\n    // obj2.name = 'zrm'\n    // console.log(obj1)\n    // console.log(obj2)\n    //浅拷贝\n    // const obj1 = {name: '高攀', age: '23', num: [{one: '1', oneOne: {one: '11', two: '22', oneoneone: {one: '111', two: '222'}}}, {two: '2'}, {three: '3'}, {four: '4'}], money: {美元: '$', 人民币: '￥'}}\n    // const obj2 = {}\n    // Object.assign(obj2, obj1)\n    // obj2.name = 'gp'\n    // obj2.num[1].oneoneone = '000'\n    \n    //浅拷贝\n    const obj1 = {name: '高攀', age: '23', num: [{one: '1', oneOne: {one: '11', two: '22', oneoneone: {one: '111', two: '222'}}}, {two: '2'}, {three: '3'}, {four: '4'}], money: {美元: '$', 人民币: '￥'}}\n    const obj2 = {...obj1}\n    obj2.name = 'gp'\n    console.log(obj1)\n    console.log(obj2)\n    //深拷贝\n    // const obj1 = {name: '高攀', age: '23', num: [{one: '1', oneOne: {one: '11', two: '22', oneoneone: {one: '111', two: '222'}}}, {two: '2'}, {three: '3'}, {four: '4'}], money: {美元: '$', 人民币: '￥'}}\n    // const obj2 = JSON.parse(JSON.stringify(obj1));\n    // obj2.num[0].oneOne.oneoneone.two = '000'\n    // console.log(obj1)\n    // console.log(obj2)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br")])]),n("h2",{attrs:{id:"javascript中-符号的意思"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#javascript中-符号的意思"}},[s._v("#")]),s._v(" javascript中“=>”符号的意思")]),s._v(" "),n("ul",[n("li",[s._v("=>是ES6语法中的arrow function")]),s._v(" "),n("li",[s._v("举例：(x) => x + 6")])]),s._v(" "),n("blockquote",[n("p",[s._v("相当于：")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    Function (x) {\n        return x+6;\n    }\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])])])}),[],!1,null,null,null);a.default=t.exports}}]);